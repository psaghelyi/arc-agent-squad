[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grc-agent-squad"
version = "0.1.0"
description = "GRC Agent Squad - AI agents specialized for Governance, Risk Management, and Compliance using AWS services and agent-squad framework"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    # Core agent framework
    "agent-squad[aws]>=1.0.1",
    
    # AWS SDK and services
    "boto3>=1.35.0",
    "botocore>=1.35.0",
    
    # AWS CDK for infrastructure
    "aws-cdk-lib>=2.120.0",
    "constructs>=10.3.0",
    
    # Web framework for API
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    
    # Environment management
    "python-dotenv>=1.0.0",
    
    # Logging and monitoring
    "structlog>=23.0.0",
    "python-json-logger>=2.0.0",
    
    # Additional utilities
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    
    # MCP (Model Context Protocol) client
    "mcp>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"] 